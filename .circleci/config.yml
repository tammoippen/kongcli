version: 2.1

commands:
  tester:
    steps:
      - checkout
      - run:
          name: Build image.
          command: sudo docker build -t kongcli .
      - run:
          name: Start kong and verify it is working.
          command: |
            set -x
            env
            sudo -E docker-compose --project-name tests up -d
            sleep 5
            sudo docker run --network container:kong --rm -it \
              byrnedo/alpine-curl --retry 20 --retry-delay 1 --retry-connrefused http://localhost:8001/
      - run:
          name: Set ENV.
          command: |
            echo 'export PATH=$HOME/.local/bin:$PATH' >> $BASH_ENV
            echo 'export PATH=/tmp/venv/bin:$PATH' >> $BASH_ENV
            echo 'export VIRTUAL_ENV=/tmp/venv' >> $BASH_ENV
            source $BASH_ENV
      - restore_cache:
          key: v1-kongcli-{{ .Environment.CIRCLE_STAGE }}-{{ checksum "pyproject.toml" }}-{{ checksum "setup.cfg" }}
      - run:
          name: Install
          command: |
            set -x
            pip install --user poetry virtualenv
            virtualenv /tmp/venv
            poetry install
      - save_cache:
          key: v1-kongcli-{{ .Environment.CIRCLE_STAGE }}-{{ checksum "pyproject.toml" }}-{{ checksum "setup.cfg" }}
          paths:
            - /tmp/venv
            - ~/app/poetry.lock
      - run:
          name: Style typing and tests.
          command: |
            set -x
            poetry run flake8
            poetry run mypy src
            poetry run pytest
      - run:
          name: Stop kong.
          when: always
          command: sudo docker-compose down --volumes
      - run:
          name: Build sdist.
          command: poetry build -vvv -f sdist
      - store_artifacts:
          path: ~/app/dist
          destination: dist
      - store_artifacts:
          path: ~/app/cov_html
          destination: cov_html
      - run:
          name: Coverage
          command: poetry run coveralls

executors:
  default:
    working_directory: ~/app
    machine: true

jobs:
  test_13:
    executor:
      name: default
    environment:
      KONG_VERSION_TAG: 0.13
    steps:
      - tester
  test_14:
    executor:
      name: default
    environment:
      KONG_VERSION_TAG: 0.14
    steps:
      - tester
  test_15:
    executor:
      name: default
    environment:
      KONG_VERSION_TAG: 0.15
    steps:
      - tester
  test_1_0:
    executor:
      name: default
    environment:
      KONG_VERSION_TAG: 1.0
      KONG_MIGRATION_CMD: bootstrap
    steps:
      - tester
  test_1_1:
    executor:
      name: default
    environment:
      KONG_VERSION_TAG: 1.1
      KONG_MIGRATION_CMD: bootstrap
    steps:
      - tester
  test_1_2:
    executor:
      name: default
    environment:
      KONG_VERSION_TAG: 1.2
      KONG_MIGRATION_CMD: bootstrap
    steps:
      - tester

  deploy_job:
    docker:
      - image: circleci/python:3.6.8
    description: "Deploy kongcli to pypi."
    steps:
      - checkout

      - run:
          name: Set PATH.
          command: |
            echo 'export PATH=$HOME/.local/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV

      - run:
          name: Pre-install
          command: |
            pip install --user poetry
            poetry build -vvv -f sdist
            poetry publish -vvv -n -u tammoippen -p $PYPI_PASS

workflows:
  version: 2.1
  test_and_deploy:
    jobs:
      - test_13:
        filters:
          tags:
            only: /.*/
      - test_14:
        filters:
          tags:
            only: /.*/
      - test_15:
        filters:
          tags:
            only: /.*/
      - test_1_0:
        filters:
          tags:
            only: /.*/
      - test_1_1:
        filters:
          tags:
            only: /.*/
      - test_1_2:
        filters:
          tags:
            only: /.*/
      - deploy_job:
          requires:
            - test_13
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
